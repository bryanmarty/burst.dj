<!DOCTYPE html>
<html lang="${request.locale_name}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="pyramid web application">
    <meta name="author" content="Pylons Project">
    <link rel="shortcut icon" href="${request.static_url('burstdj:static/pyramid-16x16.png')}">

    <title>Alchemy Scaffold for The Pyramid Web Framework</title>

    <!-- Custom styles for this scaffold -->
    <link href="${request.static_url('burstdj:static/css/app.css')}" rel="stylesheet">

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
      <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>
    <div id="header-row" class="row">
        <div id="header" class="small-10 small-centered columns end">
            <h1>burst<em>.dj</em></h1>
        </div>
    </div>
    <div id="root-row" class="row">
        <div class="small-11 small-centered columns end">
            <div class="row">
                <div class="small-2 columns">
                    <h2>Playlists</h2>
                    <div ng-controller="PlaylistController" ng-cloak>
                        {{ greeting }}
                    </div> 
                </div>
                <div class="small-8 columns">
                    <div id="theater" class="text-center" ng-controller="TheaterController" ng-cloak>
                        {{ greeting }} <br />
                        <div id="player"></div>
                    </div> 
                </div>
                <div class="small-2 columns">
                    <h2>Chat Room</h2>
                </div>
            </div>
        <div>
    </div>
    <script src="${request.static_url('burstdj:static/requirejs/require.js')}"></script>
    <script src="${request.static_url('burstdj:static/js/require-config.js')}"></script>
    <script src="${request.static_url('burstdj:static/js/site.js')}"></script>
    <script src="${request.static_url('burstdj:static/js/boostrap.js')}"></script>
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',

          // TODO: Fetch 'videoId' dynamically 
          videoId: 'j9MfuWSQoWc',

          // TODO: Make 'start' dynamically load the starting time
          // controls=0 disables player controls
          // fs=0 disables fullscreen
          // iv_load_policy=3 disables video annotations
          // rel=0 disables showing related videos at the end
          // modestbranding=1 makes the youtube logo smaller
          // showinfo=0 hides the info at the top of the video
          playerVars: {'controls': 0, 'start': 0, 'fs': 0, 'iv_load_policy': 3, 'rel': 0, 'modestbranding': 1, 'showinfo': 0},
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PAUSED) {
          player.playVideo();
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  </body>
</html>
