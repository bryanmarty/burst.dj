<!DOCTYPE html>
<html>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',

          // TODO: Fetch 'videoId' dynamically 
          videoId: 'j9MfuWSQoWc',

          // TODO: Make 'start' dynamically load the starting time
          // controls=0 disables player controls
          // fs=0 disables fullscreen
          // iv_load_policy=3 disables video annotations
          // rel=0 disables showing related videos at the end
          // modestbranding=1 makes the youtube logo smaller
          // showinfo=0 hides the info at the top of the video
          playerVars: {'controls': 0, 'start': 0, 'fs': 0, 'iv_load_policy': 3, 'rel': 0, 'modestbranding': 1, 'showinfo': 0},
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PAUSED) {
          player.playVideo();
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
  </body>
</html>
